version: '3.8'

services:
  db:
    container_name: db_postgres
    restart: always
    image: postgres:12.0-alpine
    networks:
      - proxy
    volumes:
      - $PWD/volumes/postgres:/var/lib/postgresql/data/
    env_file:
      - ./env_files/.env.prod.db

  web:
    container_name: web_django
#    image: lucasfs/lwandisurf_prod:django-3.0.7
    build:
      context: ./django
    # image: "django_web"
    restart: always
    command: uwsgi --ini /app/web/uwsgi.ini
    volumes:
      - django_project:/app/web
    networks:
      - proxy
    env_file:
      - ./env_files/.env.prod.web
    depends_on:
      - db

  nginx:
    container_name: nginx-lwandisurf
    build: ./nginx
    restart: always
    volumes:
      - django_project:/app/web
      - ./log:/var/log/nginx
    networks:
      - proxy
    depends_on:
      - web
    environment:
      - VIRTUAL_HOST=lwandisurf.org
      - VIRTUAL_NETWORK=nginx-proxy
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=lwandisurf.org
      - LETSENCRYPT_EMAIL=admin@growtechnologies.com.br

#  ui:
#    container_name: ui_react
#    hostname: ui_react
#    restart: always
#    image: lwandisurf/node:latest
#    stdin_open: true
#    volumes:
#      - './interface:/app'
#      - '/app/node_modules'
#    ports:
#      - "3001:3000"




volumes:
  django_project:
  static_data:
  postgres_data:

networks:
  proxy:
    external:
      name: nginx-proxy